.builds.builds__timeline.builds__timeline-small
	each item in this.state.items
		- var buildItemClasses = ['builds_item__' + item.status];
		- if (item.id === this.props.currentBuild.id) buildItemClasses.push('builds_item__current');
		.builds_item(key=item.id, class=buildItemClasses)
			.builds_inner
				.row
					.builds_header
						if item.project
							div
								span= item.project.name

						if item.status === 'queued'
							span(title='wait reason: ' + item.waitReason) queued
						else
							Link(to="build", params={id: item.id})
								span execution #
								span= item.number

					.builds_controls
						if item.status === 'in-progress'
							.builds_progress
								if item.project && item.project.avgBuildDuration
									Progress(build=item)

						if item.endDate
							div
								DateTime(value=item.endDate)
							div
								| took
								| 
								Duration(value=(item.endDate - item.startDate))

						if item.status === 'queued' || item.status === 'in-progress'
							.builds_buttons
								a.btn.btn-sm.btn-default(href="javascript:void(0);", onClick=this.onCancelBuild(item.id))
									i.fa.fa-fw.fa-times(title="Cancel execution")
									| 
									| Cancel
